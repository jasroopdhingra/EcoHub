{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethgarson/Documents/github/EcoHub/ecohub/src/pages/Map.jsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Navbar from \"../components/Navbar.jsx\";\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport styles from \"../styles/Map.module.css\";\nfunction Map() {\n  const mapRef = useRef(null);\n  const mapContainerRef = useRef(null);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    // Replace with your actual MapTiler API key\n    const apiKey = 'zxI0KxtpdcNfhTmR7PEA';\n\n    // Initialize the map with high-quality detailed tiles from OpenStreetMap (OSM)\n    mapRef.current = new maplibregl.Map({\n      container: mapContainerRef.current,\n      // HTML container reference\n      style: `https://api.maptiler.com/maps/basic-v2/style.json?key=${apiKey}`,\n      // Correct style URL format\n      center: [-71.163, 42.3355],\n      // Boston College coordinates\n      zoom: 13.75 // Adjust zoom for better clarity\n    });\n\n    // Add points for Boston College events (hardcoded for now)\n    const events = [{\n      title: 'Event 1',\n      lat: 42.3375,\n      lng: -71.1945\n    }, {\n      title: 'Event 2',\n      lat: 42.3381,\n      lng: -71.1940\n    }];\n    events.forEach(event => {\n      new maplibregl.Marker().setLngLat([event.lng, event.lat]).setPopup(new maplibregl.Popup().setHTML(`<h3>${event.title}</h3>`)).addTo(mapRef.current);\n    });\n\n    // Cleanup the map when the component unmounts\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.remove();\n      }\n    };\n  }, []);\n  const handleSearch = () => {\n    if (searchQuery.trim()) {\n      // Replace with your actual MapTiler API key for geocoding\n      const apiKey = 'zxI0KxtpdcNfhTmR7PEA';\n      fetch(`https://api.maptiler.com/geocoding/${searchQuery}.json?key=${apiKey}`).then(response => response.json()).then(data => {\n        if (data.features && data.features.length > 0) {\n          const location = data.features[0].geometry.coordinates;\n          mapRef.current.flyTo({\n            center: location,\n            zoom: 14\n          });\n        } else {\n          alert(\"Location not found\");\n        }\n      }).catch(err => {\n        console.error(\"Geocoding error:\", err);\n        alert(\"An error occurred while searching for the location.\");\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['search-container'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['events-label'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Events near:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles['search-bar'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search location\",\n    value: searchQuery,\n    onChange: e => setSearchQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Search\"))), /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapContainerRef,\n    className: styles['map-container'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n}\nexport default Map;","map":{"version":3,"names":["React","useState","useEffect","useRef","Navbar","maplibregl","styles","Map","mapRef","mapContainerRef","searchQuery","setSearchQuery","apiKey","current","container","style","center","zoom","events","title","lat","lng","forEach","event","Marker","setLngLat","setPopup","Popup","setHTML","addTo","remove","handleSearch","trim","fetch","then","response","json","data","features","length","location","geometry","coordinates","flyTo","alert","catch","err","console","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","onClick","ref"],"sources":["/Users/elizabethgarson/Documents/github/EcoHub/ecohub/src/pages/Map.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport Navbar from \"../components/Navbar.jsx\";\nimport maplibregl from 'maplibre-gl';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport styles from \"../styles/Map.module.css\";\n\nfunction Map() {\n  const mapRef = useRef(null);\n  const mapContainerRef = useRef(null);\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    // Replace with your actual MapTiler API key\n    const apiKey = 'zxI0KxtpdcNfhTmR7PEA';\n\n    // Initialize the map with high-quality detailed tiles from OpenStreetMap (OSM)\n    mapRef.current = new maplibregl.Map({\n      container: mapContainerRef.current, // HTML container reference\n      style: `https://api.maptiler.com/maps/basic-v2/style.json?key=${apiKey}`, // Correct style URL format\n      center: [-71.163, 42.3355], // Boston College coordinates\n      zoom: 13.75, // Adjust zoom for better clarity\n    });\n\n    // Add points for Boston College events (hardcoded for now)\n    const events = [\n      { title: 'Event 1', lat: 42.3375, lng: -71.1945 },\n      { title: 'Event 2', lat: 42.3381, lng: -71.1940 },\n    ];\n\n    events.forEach(event => {\n      new maplibregl.Marker()\n        .setLngLat([event.lng, event.lat])\n        .setPopup(new maplibregl.Popup().setHTML(`<h3>${event.title}</h3>`))\n        .addTo(mapRef.current);\n    });\n\n    // Cleanup the map when the component unmounts\n    return () => {\n      if (mapRef.current) {\n        mapRef.current.remove();\n      }\n    };\n  }, []);\n\n  const handleSearch = () => {\n    if (searchQuery.trim()) {\n      // Replace with your actual MapTiler API key for geocoding\n      const apiKey = 'zxI0KxtpdcNfhTmR7PEA';\n      fetch(`https://api.maptiler.com/geocoding/${searchQuery}.json?key=${apiKey}`)\n        .then(response => response.json())\n        .then(data => {\n          if (data.features && data.features.length > 0) {\n            const location = data.features[0].geometry.coordinates;\n            mapRef.current.flyTo({\n              center: location,\n              zoom: 14,\n            });\n          } else {\n            alert(\"Location not found\");\n          }\n        })\n        .catch(err => {\n          console.error(\"Geocoding error:\", err);\n          alert(\"An error occurred while searching for the location.\");\n        });\n    }\n  };\n\n  return (\n    <main>\n      <Navbar />\n      <div className={styles['search-container']}>\n        <div className={styles['events-label']}>\n          Events near: \n        </div>\n        <div className={styles['search-bar']}>\n          <input\n            type=\"text\"\n            placeholder=\"Search location\"\n            value={searchQuery}\n            onChange={e => setSearchQuery(e.target.value)}\n          />\n          <button onClick={handleSearch}>Search</button>\n        </div>\n      </div>\n      <div ref={mapContainerRef} className={styles['map-container']} />\n    </main>\n  );\n}\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}